# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Ddd\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Ddd\Application\Controller\:
        resource: '../src/Application/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Ddd\Infrastructure\Exception\HTTPExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

#    app.security.hash.password.listener:
#        class: App\Security\HashPasswordListener
#        tags:
#            - { name: doctrine.event_subscriber }

#    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
#        arguments:
#            - !service { class: PDO, factory: 'database_connection:getWrappedConnection' }
#            # If you get transaction issues (e.g. after login) uncomment the line below
#            - { lock_mode: 1 }

    Ddd\Infrastructure\Exception\GeneralApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    Ddd\Infrastructure\Exception\MessageHandlerException:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    command_handlers:
        namespace: Ddd\Domain\MessageHandler\Command\
        resource: '%kernel.project_dir%/src/Domain/MessageHandler/Command/*'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: command.bus }

    query_handlers:
        namespace: Ddd\Domain\MessageHandler\Query\
        resource: '%kernel.project_dir%/src/Domain/MessageHandler/Query/*'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: query.bus }

    event_handlers:
        namespace: Ddd\Domain\MessageHandler\Event\
        resource: '%kernel.project_dir%/src/Domain/MessageHandler/Event/*'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: event.bus }

    Ddd\Fixture\BookFixture:
        tags: [doctrine.fixture.orm]
